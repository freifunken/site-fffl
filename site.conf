-- This is a site configuration for Gluon v2016.1.3
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  -- hostname_prefix = 'L2TPv3-',

  -- Name of the community.
  site_name = 'Freifunk Flensburg',

  -- Shorthand of the community.
  site_code = 'fffl',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.129.0.0/16',
  prefix6 = 'fddf:bf7:10:1::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3', -- Europe/Berlin

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {
      '[fddf:bf7:10:1:1::1]',
      '[fddf:bf7:10:1:1::5]',
      '0.ntp.schloss.stras.se.fffl',
      '1.ntp.schloss.stras.se.fffl',
      '0.de.pool.ntp.org',
      '1.de.pool.ntp.org',
  },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,
		htmode = 'HT20',

    -- ESSID used for client network.
    ap = {
      ssid = 'flensburg.freifunk.net',
      -- disabled = true, (optional)
    },
    
    ibss = {
        ssid = '22:22:54:78:09:43',
        bssid = '22:22:54:78:09:43',
        mcast_rate = 12000,
    },

    mesh = {
      -- Adjust these values!
      id = 'fffl-mesh',
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    htmode = 'HT40+',
    
    ap = {
      ssid = 'flensburg.freifunk.net (5 Ghz)',
    },
    
    ibss = {
        ssid = '22:22:54:78:09:43',
        bssid = '22:22:54:78:09:43',
        mcast_rate = 12000,
    },
    
    mesh = {
      id = 'ffll-mesh',
      mcast_rate = 12000,
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.129.0.1',
    ip6 = 'fddf:bf7:10:1::1',

    -- anycast MAC of all nodes
    mac = '16:41:95:40:f7:dc',
  },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    -- enabled = true,
    -- configurable = true,

    mtu = 1406,
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 1,

        -- List of peers.
        peers = {
          gw01schlossstrasse = {
            key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',

            -- This is a list, so you might add multiple entries.
            -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
            -- remotes = {'ipv4 "xxx.somehost.invalid" port xxxxxx'},
            remotes = {'"gw01.schloss.stras.se" port xxxxx'},
          },
          snowden = {
            key = '1eeae0c4bfcc85c54ff8d32a1f3f15ae058ca75080a0052a00f8e59a335f3b76',
            remotes = {
                        '"snowden.mesh.freifunk-flensburg.de" port 10006',
                        '"snowden.fffl.org" port 10006'
                      },
          },
          gw01 = {
            key = '6f42421599e391bedbff6ac0a06998eb9bdfc53977a72fdf3f29f270aec7acc7',
            remotes = {
                        '"gw01.mesh.freifunk-flensburg.de" port 10006',
                        '"gw01.fffl.org" port 10006'
                      },
          },
          gw02 = {
            key = '4cddee3a49457c21b3993b8cf1f4c9837f40f71af970452c81ed1175a3ba33b6',
            remotes = {
                        '"gw02.mesh.freifunk-flensburg.de" port 10006',
                        '"gw02.fffl.org" port 10006'
                      },
          },
        },

        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },
      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 400,

      -- Default download limit (kbit/s).
      ingress = 3000,
    },
  },
  
  -- https://forum.freifunk.net/t/l2tp-tunneldigger-serverdoku-thread/11621
  tunneldigger_mesh_vpn = {
      mtu = 1364,
      brokers = {
                  'gw01.schloss.stras.se:xxxxx',
                  'gw02.schloss.stras.se:xxxxx'
                },
      bandwidth_limit = {
          enabled = false,
          ingress = 3000,
          egress = 200,
      },
  },
  
  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://1.updates.services.ffhl/stable/sysupgrade'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Alice
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Bob
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Mary
        },
      },
    },
  },
  
  roguenets_filter = {
      allowed_prefix4 = '10.129.0.0/16',
      allowed_prefix6 = 'fddf:bf7:10::/48',
  },
  
  -- Node roles
  -- https://github.com/freifunk-mwu/ffnord-alfred-announce/blob/mwu/nodeinfo.d/system/role
  -- https://github.com/ffnord/alfred-json
  --
  -- http://gluon.readthedocs.org/en/v2016.1.3/features/monitoring.html#alfred-mesh-bound
  -- http://gluon.readthedocs.org/en/v2016.1.3/features/roles.html
  roles = {
      default = 'node',
      list = {
          node,
          uplink,
          test,
          backbone,
          gateway,
          service,
      },
  },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },
}
